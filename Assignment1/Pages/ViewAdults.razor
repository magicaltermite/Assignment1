@page "/viewadults"
@using Models
@using Assignment1.Data
@inject IAdultService AdultService;

<h1>List of Adults</h1>

    
<p>
    Filter by ID: <input type="number" @oninput="@((arg) => FilterAdultsById(arg))" style="width:50px"/>
</p>
    
    
    @if (adultsToShow == null) {
        <p>
            <em>Loading...</em>
        </p>
    } else if (!adultsToShow.Any()) {
        <p>
            <em>No adults exists. Please add some</em>
        </p>
    }
    else {

        <table class="table">
            <thead>
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Hair Colour</th>
                <th>Eye Colour</th>
                <th>Age</th>
                <th>Weight</th>
                <th>Height</th>
                <th>Sex</th>
                <th>Job Title</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var adult in adultsToShow) {
                <tr>
                    <td>@adult.Id</td>
                    <td>@adult.FirstName</td>
                    <td>@adult.LastName</td>
                    <td>@adult.HairColor</td>
                    <td>@adult.EyeColor</td>
                    <td>@adult.Age</td>
                    <td>@adult.Weight</td>
                    <td>@adult.Height</td>
                    <td>@adult.Sex</td>
                    <td>@adult.JobTitle</td>
                    
                </tr>
            }
            </tbody>
        </table>
        
  
}

@code {
    private IList<Adult> adultsToShow;
    private IList<Adult> allAdults;

    private int? filterById;

    
    
    private void FilterAdultsById(ChangeEventArgs changeEventArgs) {
        filterById = null;

        try {
            filterById = int.Parse(changeEventArgs.Value.ToString());
        }
        catch {
            adultsToShow = allAdults;
        }

        if (filterById != null) {
            ExecuteFilter();
        }
    }

    private void ExecuteFilter() {
        adultsToShow = allAdults.Where(t => (filterById != null && t.Id == filterById || filterById == null)).ToList();
    }

    protected override async Task OnInitializedAsync() {
        allAdults = await AdultService.GetAdultAsync();
        adultsToShow = allAdults;
    }

}

